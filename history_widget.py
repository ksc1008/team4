# Form implementation generated from reading ui file 'gui_history_widget.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import *
from signalManager import SignalManager
from optiondata import Option_data
from history_management import History_manage
import sys


class History_widget(QWidget):
    def __init__(self):
        super().__init__()
        self.history = History_manage()
        self.traySignals = SignalManager().traySignals

        self.setupUi()
        self.setWindowFlags(QtCore.Qt.WindowType.WindowStaysOnTopHint)
        self.show()

    def setupUi(self):
        self.setObjectName("Form")
        self.resize(439, 320)
        self.setMinimumSize(QtCore.QSize(439, 320))
        self.setMaximumSize(QtCore.QSize(439, 320))
        self.label = QtWidgets.QLabel(parent=self)
        self.label.setGeometry(QtCore.QRect(30, 10, 301, 16))
        self.label.setObjectName("label")
        self.pushButton = QtWidgets.QPushButton(parent=self)
        self.pushButton.setGeometry(QtCore.QRect(340, 10, 75, 24))
        self.pushButton.setObjectName("pushButton")
        self.textEdit = QtWidgets.QTextEdit(parent=self)
        self.textEdit.setGeometry(QtCore.QRect(20, 40, 401, 241))
        self.textEdit.setObjectName("textEdit")
        self.pushButton_2 = QtWidgets.QPushButton(parent=self)
        self.pushButton_2.setGeometry(QtCore.QRect(350, 290, 75, 24))
        self.pushButton_2.setObjectName("pushButton_2")

        self.pushButton.clicked.connect(self.directory_clicked)
        self.pushButton_2.clicked.connect(self.savebutton_clicked)

        self.retranslateUi()
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("Form", "Form"))
        self.label.setText(_translate("Form", "선택한 파일 이름"))
        self.pushButton.setText(_translate("Form", "파일 선택"))
        self.pushButton_2.setText(_translate("Form", "확인"))

    def directory_clicked(self):
        dir = QFileDialog.getOpenFileName(self, 'select history', 'history/', 'history(*.json)')
        if not dir[0]:
            return -1
        self.filepath = dir[0]
        his = self.history.open_history(self.filepath)
        self.num = 1
        while True:
            try:
                exist = self.textEdit.toPlainText()
                self.textEdit.setText(exist + his[self.num]['role'] + ": " + his[self.num]['content'] + '\n')
                self.num = self.num + 1
            except IndexError:
                break

    def savebutton_clicked(self):
        self.traySignals.history_selected.emit(self.filepath)
        self.close()



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    ui = History_widget()
    sys.exit(app.exec())
