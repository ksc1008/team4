# Form implementation generated from reading ui file 'gui_gpt_api.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtWidgets
from optiondata import Option_data
from signalManager import SignalManager
from PyQt6.QtWidgets import *

class Api_MainWindow(QWidget):
    def __init__(self):
        super().__init__()
        self.setupUi()
        self.option_data = Option_data()
        self.optionSignals = SignalManager().optionSignals
        self.setWindowFlags(QtCore.Qt.WindowType.WindowStaysOnTopHint)
        self.show()

    def setupUi(self):
        self.setObjectName("Form")
        self.resize(591, 415)
        self.setMinimumSize(QtCore.QSize(591, 415))
        self.setMaximumSize(QtCore.QSize(591, 415))
        self.label_3 = QtWidgets.QLabel(self)
        self.label_3.setGeometry(QtCore.QRect(90, 40, 81, 21))
        self.label_3.setObjectName("label_3")
        self.lineEdit = QtWidgets.QLineEdit(self)
        self.lineEdit.setGeometry(QtCore.QRect(180, 40, 281, 21))
        self.lineEdit.setText("")
        self.lineEdit.setObjectName("lineEdit")
        self.pushButton = QtWidgets.QPushButton(self)
        self.pushButton.setGeometry(QtCore.QRect(470, 40, 75, 21))
        self.pushButton.setObjectName("pushButton")
        self.label = QtWidgets.QLabel(self)
        self.label.setGeometry(QtCore.QRect(80, 70, 91, 20))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self)
        self.label_2.setGeometry(QtCore.QRect(320, 70, 21, 20))
        self.label_2.setObjectName("label_2")
        self.lineEdit_3 = QtWidgets.QLineEdit(self)
        self.lineEdit_3.setGeometry(QtCore.QRect(180, 90, 281, 21))
        self.lineEdit_3.setText("")
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.lineEdit_4 = QtWidgets.QLineEdit(self)
        self.lineEdit_4.setGeometry(QtCore.QRect(70, 90, 101, 21))
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.pushButton_3 = QtWidgets.QPushButton(self)
        self.pushButton_3.setGeometry(QtCore.QRect(470, 90, 75, 21))
        self.pushButton_3.setObjectName("pushButton_3")
        self.label_4 = QtWidgets.QLabel(self)
        self.label_4.setGeometry(QtCore.QRect(90, 120, 61, 20))
        self.label_4.setObjectName("label_4")
        self.label_7 = QtWidgets.QLabel(self)
        self.label_7.setGeometry(QtCore.QRect(320, 120, 21, 20))
        self.label_7.setObjectName("label_7")
        self.label_5 = QtWidgets.QLabel(self)
        self.label_5.setGeometry(QtCore.QRect(70, 140, 101, 201))
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self)
        self.label_6.setGeometry(QtCore.QRect(180, 140, 281, 201))
        self.label_6.setObjectName("label_6")
        self.pushButton_2 = QtWidgets.QPushButton(self)
        self.pushButton_2.setGeometry(QtCore.QRect(490, 360, 75, 24))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.savebutton_clicked)
        self.pushButton.clicked.connect(self.savepath_clicked)

        self.retranslateUi()
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("Form", "API 설정"))
        self.label_3.setText(_translate("Form", "로컬파일 경로"))
        self.pushButton.setText(_translate("Form", "입력"))
        self.label.setText(_translate("Form", "추가할 API 이름"))
        self.label_2.setText(_translate("Form", "API"))
        self.pushButton_3.setText(_translate("Form", "추가"))
        self.label_4.setText(_translate("Form", "추가된 API"))
        self.label_7.setText(_translate("Form", "API"))
        self.label_5.setText(_translate("Form", "TextLabel"))
        self.label_6.setText(_translate("Form", "TextLabel"))
        self.pushButton_2.setText(_translate("Form", "저장"))

    #저장버튼 클릭 이벤트
    def savebutton_clicked(self):
        self.option_data.openai_api_key = self.lineEdit_3.text()
        self.option_data.save_option()
        self.optionSignals.changed_checked_api.emit()
        print("save api key")
        print(self.lineEdit_3.text())
        self.close()
    #경로추가 버튼 클릭 이벤트
    def savepath_clicked(self):
        self.option_data.path = self.lineEdit.text()
        self.option_data.save_option()
        self.optionSignals.changed_path_saved.emit()
        print("save path")
        print(self.lineEdit.text())

