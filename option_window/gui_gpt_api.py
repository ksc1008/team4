# Form implementation generated from reading ui file 'gui_gpt_api.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtWidgets
from optiondata import Option_data
from signalManager import SignalManager
from PyQt6.QtWidgets import *
import sys

class Api_MainWindow(QWidget):
    def __init__(self):
        super().__init__()
        self.option_data = Option_data()
        self.optionSignals = SignalManager().optionSignals
        self.setupUi()
        self.setWindowFlags(QtCore.Qt.WindowType.WindowStaysOnTopHint)
        self.show()

    def setupUi(self):
        self.setObjectName("MainWindow")
        self.resize(591, 221)
        self.setMinimumSize(QtCore.QSize(591, 221))
        self.setMaximumSize(QtCore.QSize(591, 221))
        self.centralwidget = QtWidgets.QWidget(parent=self)
        self.centralwidget.setObjectName("centralwidget")
        self.lineEdit = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(180, 20, 281, 21))
        self.lineEdit.setText("")
        self.lineEdit.setObjectName("lineEdit")
        self.pushButton = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(470, 20, 75, 21))
        self.pushButton.setObjectName("pushButton")
        self.label_3 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(90, 20, 81, 21))
        self.label_3.setObjectName("label_3")
        self.lineEdit_3 = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.lineEdit_3.setGeometry(QtCore.QRect(180, 70, 281, 21))
        self.lineEdit_3.setText("")
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.pushButton_3 = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(470, 70, 75, 21))
        self.pushButton_3.setObjectName("pushButton_3")
        self.label = QtWidgets.QLabel(parent=self.centralwidget)
        self.label.setGeometry(QtCore.QRect(80, 50, 91, 20))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(320, 50, 21, 20))
        self.label_2.setObjectName("label_2")
        self.pushButton_2 = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(500, 150, 75, 24))
        self.pushButton_2.setMinimumSize(QtCore.QSize(75, 24))
        self.pushButton_2.setMaximumSize(QtCore.QSize(74, 24))
        self.pushButton_2.setObjectName("pushButton_2")
        self.listWidget = QtWidgets.QComboBox(parent=self.centralwidget)
        self.listWidget.setGeometry(QtCore.QRect(40, 70, 131, 21))
        self.listWidget.setObjectName("comboWidget")
        self.lineEdit_2 = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(180, 110, 113, 21))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.label_4 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(70, 110, 101, 20))
        self.label_4.setObjectName("label_4")
        self.pushButton_4 = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(300, 110, 75, 21))
        self.pushButton_4.setObjectName("pushButton_4")
        self.menubar = QtWidgets.QMenuBar(parent=self)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 591, 22))
        self.menubar.setObjectName("menubar")
        self.statusbar = QtWidgets.QStatusBar(parent=self)
        self.statusbar.setObjectName("statusbar")

        self.pushButton.clicked.connect(self.savepath_clicked)
        self.pushButton_2.clicked.connect(self.savebutton_clicked)
        self.pushButton_4.clicked.connect(self.addApiname)
        self.pushButton_3.clicked.connect(self.addApi)
        self.listWidget.currentIndexChanged.connect(self.changedItem)

        self.retranslateUi()
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "입력"))
        self.label_3.setText(_translate("MainWindow", "로컬파일 경로"))
        self.pushButton_3.setText(_translate("MainWindow", "추가"))
        self.label.setText(_translate("MainWindow", "추가할 API 선택"))
        self.label_2.setText(_translate("MainWindow", "API"))
        self.pushButton_2.setText(_translate("MainWindow", "저장"))
        self.label_4.setText(_translate("MainWindow", "API 이름 추가하기"))
        self.pushButton_4.setText(_translate("MainWindow", "추가"))

        self.apikeylist = list(self.option_data.api_key.keys())
        for key in self.apikeylist:
            self.listWidget.addItem(key)

        self.lineEdit_3.setText(self.option_data.api_key[self.listWidget.currentText()])

    #저장버튼 클릭 이벤트
    def savebutton_clicked(self):
        self.option_data.openai_api_key = self.lineEdit_3.text()
        self.apiname = self.listWidget.currentText()
        self.apikey = self.lineEdit_3.text()
        self.option_data.add_api(self.apiname, self.apikey)
        self.option_data.save_option()
        self.optionSignals.changed_checked_api.emit()
        print("save api key")
        print(self.lineEdit_3.text())
        self.close()

    #경로추가 버튼 클릭 이벤트
    def savepath_clicked(self):
        dir = QFileDialog.getExistingDirectory(self, "select directory")
        if not dir:
            return -1
        self.option_data.path = dir
        self.lineEdit.setText(dir)
        self.option_data.save_option()
        self.optionSignals.changed_path_saved.emit()
        print("save path")
        print(self.lineEdit.text())

    def addApiname(self):
        self.listWidget.addItem(self.lineEdit_2.text())
        self.lineEdit_2.setText("")

    def addApi(self):
        self.apiname = self.listWidget.currentText()
        self.apikey = self.lineEdit_3.text()
        self.option_data.add_api(self.apiname, self.apikey)

    def changedItem(self):
        if self.listWidget.currentText() in self.apikeylist:
            self.lineEdit_3.setText(self.option_data.api_key[self.listWidget.currentText()])
        else:
            self.lineEdit_3.setText("")

if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    api = Api_MainWindow()
    sys.exit(app.exec())

